insert into MITKC_IRB_PROTOCOL(
PROTOCOL_ID,
PROTOCOL_NUMBER,
SEQUENCE_NUMBER,
PROTOCOL_TYPE_CODE,
PROTOCOL_STATUS_CODE,
TITLE,
DESCRIPTION,
APPROVAL_DATE,
EXPIRATION_DATE,
LAST_APPROVAL_DATE,
FDA_APPLICATION_NUMBER,
REFERENCE_NUMBER_1,
REFERENCE_NUMBER_2,
INITIAL_SUBMISSION_DATE,
ACTIVE,
CREATE_TIMESTAMP,
CREATE_USER,
UPDATE_TIMESTAMP,
UPDATE_USER
)
select distinct
PROTOCOL_ID,
PROTOCOL_NUMBER,
SEQUENCE_NUMBER,
PROTOCOL_TYPE_CODE,
PROTOCOL_STATUS_CODE,
TITLE,
DESCRIPTION,
APPROVAL_DATE,
EXPIRATION_DATE,
LAST_APPROVAL_DATE,
FDA_APPLICATION_NUMBER,
REFERENCE_NUMBER_1,
REFERENCE_NUMBER_2,
INITIAL_SUBMISSION_DATE,
ACTIVE,
CREATE_TIMESTAMP,
CREATE_USER,
UPDATE_TIMESTAMP,
UPDATE_USER
from protocol
/
update MITKC_IRB_PROTOCOL set IS_LATEST = 'N'
/
commit
/
update MITKC_IRB_PROTOCOL t1 set t1.IS_LATEST = 'Y' 
where t1.protocol_id IN  (
                          select max(protocol_id)
                          from MITKC_IRB_PROTOCOL
                          group by protocol_number
                          ) 
/
commit
/
insert into MITKC_IRB_PROTOCOL_SUBMISSION(
SUBMISSION_ID,
PROTOCOL_NUMBER,
SEQUENCE_NUMBER,
SUBMISSION_NUMBER,
SCHEDULE_ID,
COMMITTEE_ID,
PROTOCOL_ID,
SUBMISSION_TYPE_CODE,
SUBMISSION_TYPE_QUAL_CODE,
SUBMISSION_STATUS_CODE,
PROTOCOL_REVIEW_TYPE_CODE,
SUBMISSION_DATE,
COMMENTS,
YES_VOTE_COUNT,
NO_VOTE_COUNT,
ABSTAINER_COUNT,
VOTING_COMMENTS,
UPDATE_TIMESTAMP,
UPDATE_USER,
RECUSED_COUNT,
IS_BILLABLE,
COMM_DECISION_MOTION_TYPE_CODE
)
select distinct
SUBMISSION_ID,
PROTOCOL_NUMBER,
SEQUENCE_NUMBER,
SUBMISSION_NUMBER,
SCHEDULE_ID,
COMMITTEE_ID,
PROTOCOL_ID,
SUBMISSION_TYPE_CODE,
SUBMISSION_TYPE_QUAL_CODE,
SUBMISSION_STATUS_CODE,
PROTOCOL_REVIEW_TYPE_CODE,
SUBMISSION_DATE,
COMMENTS,
YES_VOTE_COUNT,
NO_VOTE_COUNT,
ABSTAINER_COUNT,
VOTING_COMMENTS,
UPDATE_TIMESTAMP,
UPDATE_USER,
RECUSED_COUNT,
IS_BILLABLE,
COMM_DECISION_MOTION_TYPE_CODE
from PROTOCOL_SUBMISSION
/
ALTER TABLE MITKC_IRB_PROTOCOL_PERSONS ADD rolodex_id NUMBER(6)
/
insert into MITKC_IRB_PROTOCOL_PERSONS(
PROTOCOL_PERSON_ID,
PROTOCOL_ID,
PROTOCOL_NUMBER,
SEQUENCE_NUMBER,
PERSON_ID,
PERSON_NAME,
PROTOCOL_PERSON_ROLE_ID,
ROLODEX_ID,
AFFILIATION_TYPE_CODE,
UPDATE_TIMESTAMP,
UPDATE_USER,
COMMENTS,
SSN,
LAST_NAME,
FIRST_NAME,
MIDDLE_NAME,
FULL_NAME,
PRIOR_NAME,
USER_NAME,
EMAIL_ADDRESS,
DATE_OF_BIRTH,
AGE,
AGE_BY_FISCAL_YEAR,
GENDER,
RACE,
EDUCATION_LEVEL,
DEGREE,
MAJOR,
IS_HANDICAPPED,
HANDICAP_TYPE,
IS_VETERAN,
VETERAN_TYPE,
VISA_CODE,
VISA_TYPE,
VISA_RENEWAL_DATE,
HAS_VISA,
OFFICE_LOCATION,
OFFICE_PHONE,
SECONDRY_OFFICE_LOCATION,
SECONDRY_OFFICE_PHONE,
SCHOOL,
YEAR_GRADUATED,
DIRECTORY_DEPARTMENT,
SALUTATION,
COUNTRY_OF_CITIZENSHIP,
PRIMARY_TITLE,
DIRECTORY_TITLE,
HOME_UNIT,
IS_FACULTY,
IS_GRADUATE_STUDENT_STAFF,
IS_RESEARCH_STAFF,
IS_SERVICE_STAFF,
IS_SUPPORT_STAFF,
IS_OTHER_ACCADEMIC_GROUP,
IS_MEDICAL_STAFF,
VACATION_ACCURAL,
IS_ON_SABBATICAL,
ID_PROVIDED,
ID_VERIFIED,
ADDRESS_LINE_1,
ADDRESS_LINE_2,
ADDRESS_LINE_3,
CITY,
COUNTY,
STATE,
POSTAL_CODE,
COUNTRY_CODE,
FAX_NUMBER,
PAGER_NUMBER,
MOBILE_PHONE_NUMBER,
ERA_COMMONS_USER_NAME
)
select distinct
PROTOCOL_PERSON_ID,
PROTOCOL_PERSONS.PROTOCOL_ID,
PROTOCOL_PERSONS.PROTOCOL_NUMBER,
PROTOCOL_PERSONS.SEQUENCE_NUMBER,
PROTOCOL_PERSONS.PERSON_ID,
PROTOCOL_PERSONS.PERSON_NAME,
PROTOCOL_PERSON_ROLE_ID,
ROLODEX_ID,
AFFILIATION_TYPE_CODE,
PROTOCOL_PERSONS.UPDATE_TIMESTAMP,
PROTOCOL_PERSONS.UPDATE_USER,
to_char(COMMENTS),
SSN,
LAST_NAME,
FIRST_NAME,
MIDDLE_NAME,
FULL_NAME,
PRIOR_NAME,
USER_NAME,
EMAIL_ADDRESS,
DATE_OF_BIRTH,
AGE,
AGE_BY_FISCAL_YEAR,
GENDER,
RACE,
EDUCATION_LEVEL,
DEGREE,
MAJOR,
IS_HANDICAPPED,
HANDICAP_TYPE,
IS_VETERAN,
VETERAN_TYPE,
VISA_CODE,
VISA_TYPE,
VISA_RENEWAL_DATE,
HAS_VISA,
OFFICE_LOCATION,
OFFICE_PHONE,
SECONDRY_OFFICE_LOCATION,
SECONDRY_OFFICE_PHONE,
SCHOOL,
YEAR_GRADUATED,
DIRECTORY_DEPARTMENT,
SALUTATION,
COUNTRY_OF_CITIZENSHIP,
PRIMARY_TITLE,
DIRECTORY_TITLE,
HOME_UNIT,
IS_FACULTY,
IS_GRADUATE_STUDENT_STAFF,
IS_RESEARCH_STAFF,
IS_SERVICE_STAFF,
IS_SUPPORT_STAFF,
IS_OTHER_ACCADEMIC_GROUP,
IS_MEDICAL_STAFF,
VACATION_ACCURAL,
IS_ON_SABBATICAL,
ID_PROVIDED,
ID_VERIFIED,
ADDRESS_LINE_1,
ADDRESS_LINE_2,
ADDRESS_LINE_3,
CITY,
COUNTY,
PROTOCOL_PERSONS.STATE,
PROTOCOL_PERSONS.POSTAL_CODE,
PROTOCOL_PERSONS.COUNTRY_CODE,
PROTOCOL_PERSONS.FAX_NUMBER,
PROTOCOL_PERSONS.PAGER_NUMBER,
PROTOCOL_PERSONS.MOBILE_PHONE_NUMBER,
PROTOCOL_PERSONS.ERA_COMMONS_USER_NAME
from PROTOCOL_PERSONS inner join MITKC_IRB_PROTOCOL on PROTOCOL_PERSONS.protocol_id = MITKC_IRB_PROTOCOL.protocol_id
/
insert into MITKC_IRB_PROTOCOL_UNITS(
PROTOCOL_PERSON_ID,
PROTOCOL_UNITS_ID,
PROTOCOL_NUMBER,
SEQUENCE_NUMBER,
UNIT_NUMBER,
LEAD_UNIT_FLAG,
PERSON_ID,
UPDATE_TIMESTAMP,
UPDATE_USER
)
select 
PROTOCOL_PERSON_ID,
PROTOCOL_UNITS_ID,
PROTOCOL_NUMBER,
SEQUENCE_NUMBER,
UNIT_NUMBER,
LEAD_UNIT_FLAG,
PERSON_ID,
UPDATE_TIMESTAMP,
UPDATE_USER
from protocol_units
/
insert into MITKC_IRB_PROTO_VULNERABLE_SUB(
PROTOCOL_VULNERABLE_SUB_ID,
PROTOCOL_ID,
PROTOCOL_NUMBER,
SEQUENCE_NUMBER,
VULNERABLE_SUBJECT_TYPE_CODE,
SUBJECT_COUNT,
UPDATE_TIMESTAMP,
UPDATE_USER
)
select distinct
PROTOCOL_VULNERABLE_SUB_ID,
t1.PROTOCOL_ID,
t1.PROTOCOL_NUMBER,
t1.SEQUENCE_NUMBER,
VULNERABLE_SUBJECT_TYPE_CODE,
SUBJECT_COUNT,
t1.UPDATE_TIMESTAMP,
t1.UPDATE_USER
from PROTOCOL_VULNERABLE_SUB t1 inner join MITKC_IRB_PROTOCOL t2 on t1.protocol_id = t2.protocol_id
/
insert into MITKC_IRB_PROTOCOL_LOCATION(
PROTOCOL_LOCATION_ID,
PROTOCOL_ID,
PROTOCOL_NUMBER,
SEQUENCE_NUMBER,
PROTOCOL_ORG_TYPE_CODE,
ORGANIZATION_ID,
ROLODEX_ID,
UPDATE_TIMESTAMP,
UPDATE_USER
)
select distinct
t1.PROTOCOL_LOCATION_ID,
t1.PROTOCOL_ID,
t1.PROTOCOL_NUMBER,
t1.SEQUENCE_NUMBER,
t1.PROTOCOL_ORG_TYPE_CODE,
t1.ORGANIZATION_ID,
t1.ROLODEX_ID,
t1.UPDATE_TIMESTAMP,
t1.UPDATE_USER
from PROTOCOL_LOCATION t1 inner join MITKC_IRB_PROTOCOL t2 on t1.protocol_id = t2.protocol_id
/
insert into MITKC_IRB_PROTO_FUNDING_SOURCE(
PROTOCOL_FUNDING_SOURCE_ID,
PROTOCOL_ID,
PROTOCOL_NUMBER,
SEQUENCE_NUMBER,
FUNDING_SOURCE_TYPE_CODE,
FUNDING_SOURCE,
UPDATE_TIMESTAMP,
UPDATE_USER,
FUNDING_SOURCE_NAME
)
select distinct
t1.PROTOCOL_FUNDING_SOURCE_ID,
t1.PROTOCOL_ID,
t1.PROTOCOL_NUMBER,
t1.SEQUENCE_NUMBER,
t1.FUNDING_SOURCE_TYPE_CODE,
t1.FUNDING_SOURCE,
t1.UPDATE_TIMESTAMP,
t1.UPDATE_USER,
t1.FUNDING_SOURCE_NAME
from PROTOCOL_FUNDING_SOURCE t1 inner join MITKC_IRB_PROTOCOL t2 on t1.protocol_id = t2.protocol_id
/
insert into MITKC_IRB_PROTO_SPECIAL_REVIEW(
PROTOCOL_SPECIAL_REVIEW_ID,
PROTOCOL_ID,
SPECIAL_REVIEW_NUMBER,
SPECIAL_REVIEW_CODE,
APPROVAL_TYPE_CODE,
PROTOCOL_NUMBER,
APPLICATION_DATE,
APPROVAL_DATE,
EXPIRATION_DATE,
COMMENTS,
UPDATE_USER,
UPDATE_TIMESTAMP

)
select distinct
t1.PROTOCOL_SPECIAL_REVIEW_ID,
t1.PROTOCOL_ID,
t1.SPECIAL_REVIEW_NUMBER,
t1.SPECIAL_REVIEW_CODE,
t1.APPROVAL_TYPE_CODE,
t1.PROTOCOL_NUMBER,
t1.APPLICATION_DATE,
t1.APPROVAL_DATE,
t1.EXPIRATION_DATE,
to_char(t1.COMMENTS),
t1.UPDATE_USER,
t1.UPDATE_TIMESTAMP
from PROTOCOL_SPECIAL_REVIEW t1 inner join MITKC_IRB_PROTOCOL t2 on t1.protocol_id = t2.protocol_id
/
ALTER TABLE MITKC_IRB_PROTOCOL_PERSONS ADD  "NON_EMPLOYEE_FLAG"  VARCHAR2(1 BYTE)
/
update MITKC_IRB_PROTOCOL_PERSONS set NON_EMPLOYEE_FLAG = 'N'
/
update MITKC_IRB_PROTOCOL_PERSONS set NON_EMPLOYEE_FLAG = 'Y'
WHERE rolodex_id is not null
/
update MITKC_IRB_PROTOCOL_PERSONS set person_id = rolodex_id
WHERE rolodex_id is not null
and person_id is null
/
ALTER TABLE MITKC_IRB_PROTOCOL_PERSONS DROP COLUMN rolodex_id
/
ALTER TABLE MITKC_IRB_PROTO_SPECIAL_REVIEW ADD  PROTOCOL_NUMBER  VARCHAR2(20 BYTE)
/
ALTER TABLE MITKC_IRB_PROTO_SPECIAL_REVIEW ADD  SEQUENCE_NUMBER  NUMBER(4,0)
/
UPDATE MITKC_IRB_PROTOCOL_UNITS t1 
	SET t1.PROTOCOL_ID = (SELECT MAX(t2.PROTOCOL_ID)
                         FROM MITKC_IRB_PROTOCOL t2
                         WHERE t1.PROTOCOL_NUMBER = t2.PROTOCOL_NUMBER
                         AND t1.SEQUENCE_NUMBER = t2.SEQUENCE_NUMBER
						)
commit
/
UPDATE MITKC_IRB_PROTO_SPECIAL_REVIEW t1
     SET (t1.PROTOCOL_NUMBER, t1.SEQUENCE_NUMBER) =
          (SELECT t2.PROTOCOL_NUMBER, t2.SEQUENCE_NUMBER
           FROM MITKC_IRB_PROTOCOL t2
           WHERE t2.protocol_id = t1.protocol_id
          )
/          
commit
/         
