create or replace procedure GET_IRB_PROTOCOL_HISTORY_DET(
AV_PROTOCOL_ID  			IN MITKC_IRB_PROTOCOL.PROTOCOL_ID%type,
AV_ACTION_ID				IN MITKC_IRB_PROTOCOL_ACTIONS.ACTION_ID%type,
AV_NEXT_GROUP_ACTION_ID		IN MITKC_IRB_PROTOCOL_ACTIONS.ACTION_ID%type,
AV_PREVIOUS_GROUP_ACTION_ID IN MITKC_IRB_PROTOCOL_ACTIONS.ACTION_ID%type,
CUR_GENERIC         OUT SYS_REFCURSOR
)IS
li_active_protocol_id   NUMBER;
li_next_group_action_id NUMBER := AV_NEXT_GROUP_ACTION_ID;

BEGIN

	if li_next_group_action_id	= 0 then
		li_next_group_action_id := AV_ACTION_ID;
	else
		li_next_group_action_id	:= li_next_group_action_id - 1;
	end if;

	OPEN CUR_GENERIC FOR	
	SELECT 
		T1.ACTION_ID,
		T2.DESCRIPTION as PROTOCOL_ACTION,
		T1.COMMENTS, 
		T1.PROTOCOL_ACTION_TYPE_CODE,
		to_char(T1.ACTION_DATE,'mm/dd/yyyy') as ACTION_DATE,		
		to_char(T1.UPDATE_TIMESTAMP,'mm/dd/yyyy hh:mi:ss am') as update_timestamp,
		t3.full_name as update_user_name
	FROM MITKC_IRB_PROTOCOL_ACTIONS T1 
	INNER JOIN	MITKC_IRB_PROTOCOL_ACTION_TYPE T2 ON T1.PROTOCOL_ACTION_TYPE_CODE = T2.PROTOCOL_ACTION_TYPE_CODE
	INNER JOIN KC_PERSON_MV T3 ON (T3.PRNCPL_NM) = (T1.UPDATE_USER)
	AND T1.PROTOCOL_ID = AV_PROTOCOL_ID
	AND T1.PROTOCOL_ACTION_TYPE_CODE NOT IN (109,111,112,110)	
	AND T1.ACTION_ID BETWEEN AV_ACTION_ID AND li_next_group_action_id
	ORDER BY ACTION_ID desc;
END;	
/	